
1)  Почему использование тестовых заглушек может быть полезным при написании модульных тестов? 

Использование тестовых заглушек может быть полезным при написании модульных тестов, 
так как они позволяют изолировать модуль, который тестируется, от зависимостей и внешних компонентов. 
Заглушки могут имитировать поведение зависимости и предоставлять заранее определенные значения или исключения в ответ на вызовы методов. 
Это позволяет сосредоточиться на тестировании конкретного модуля, без необходимости взаимодействия с реальными зависимостями.

2) Какой тип тестовой заглушки следует использовать, если вам нужно проверить, что метод был вызван с определенными аргументами? 

Для проверки, что метод был вызван с определенными аргументами, следует использовать мок-объекты (mock objects). 
Моки позволяют настраивать ожидаемое поведение и проверять, был ли метод вызван с определенными параметрами. 
Мок-объекты также могут возвращать заданные значения в ответ на вызовы методов.

3) Какой тип тестовой заглушки следует использовать, если вам просто нужно вернуть определенное значение или исключение в ответ на вызов метода? 

Если требуется просто вернуть определенное значение или исключение в ответ на вызов метода, то следует использовать заглушку типа Stub
Заглушки этого типа возвращают предопределённое значение.

4) Какой тип тестовой заглушки вы бы использовали для имитации  взаимодействия с внешним API или базой данных? 

Для имитации взаимодействия с внешним API или базой данных следует использовать заглушки заглушку типа Fake
т.к.заглушки этого типа могут воссоздавать поведение внешних зависимостей, например базы даных.
